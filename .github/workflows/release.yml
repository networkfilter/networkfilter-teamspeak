name: Release CI

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Release CI
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: 16
          distribution: "adopt"
          server-id: github
          server-username: PACKAGES_USERNAME
          server-password: PACKAGES_PASSWORD

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-release-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # semantic-release:release will fail, when no release required
      - name: Release with Maven
        run: mvn -B semantic-release:release
        id: release
        continue-on-error: true

      - name: Sync develop
        run: |
          git checkout develop
          git merge main
          git push
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'
        continue-on-error: true

      - name: Switch back to main
        run: git checkout main
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'
        continue-on-error: true

      - name: Get current tag
        id: current_tag
        run: echo ::set-output name=tag::$(git describe --abbrev=0 --tags)
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - name: Get Git Changelog
        id: get_changelog
        uses: thenilsdev/git-log-action@1.0.5
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - name: Build with Maven
        run: mvn -B package
        env:
          PACKAGES_USERNAME: ${{ secrets.PACKAGES_USERNAME }}
          PACKAGES_PASSWORD: ${{ secrets.PACKAGES_PASSWORD }}
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - name: Publish package to github
        run: mvn -B deploy
        env:
          PUBLISH_TO_GITHUB: ${{ secrets.PUBLISH_TO_GITHUB }}
          PACKAGES_USERNAME: $GITHUB_ACTOR
          PACKAGES_PASSWORD: ${{ github.token }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          REPOSITORY_NAME: ${{ github.event.repository.name }}
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success' && env.PUBLISH_TO_GITHUB != null

      - name: Create Release
        uses: softprops/action-gh-release@v0.1.14
        id: create_release
        with:
          tag_name: ${{ steps.current_tag.outputs.tag }}
          name: Release ${{ steps.current_tag.outputs.tag }}
          body: ${{ steps.get_changelog.outputs.log }}
          files: ./artifacts/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.release.outcome == 'success' && steps.release.conclusion == 'success'

      - uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_RELEASE_WEBHOOK }}
